{"version":3,"sources":["components/user-create.component.js","components/user-list.component.js","components/technology-create.component.js","components/technology-list.component.js","components/category-create.component.js","components/category-list.component.js","App.js","serviceWorker.js","index.js"],"names":["CreateUser","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderSuccess","state","complete","react_default","a","createElement","undefined","onChangeName","bind","assertThisInitialized","onChangeAge","onChangeLocation","onSubmit","name","age","location","e","setState","target","value","_this2","preventDefault","console","log","concat","newUser","axios","post","then","res","data","catch","err","style","marginTop","className","type","onChange","Component","UserList","error","users","fetchUsers","_callee","regenerator_default","wrap","_context","prev","next","get","sent","t0","message","stop","map","user","key","_id","CreateTechnology","onChangeLanguage","labguage","language","newTechnology","TechnologyList","technologies","id","category","fetchTechnologies","technology","react_router_dom","to","CreateCategory","onChangeTitle","title","newCategory","NewCategory","_this$props$category","onClick","onClose","Category","_ref","onEdit","CategoryList","edit","categories","updatedCategory","_this3","toConsumableArray","openEdit","editCategories","closeEdit","_callee2","_context2","deleteCategory","_callee3","_context3","fetchCategories","editCategory","_callee4","_context4","closeCategory","_callee5","_context5","selectedCategory","saveCategory","_callee6","_context6","showCategory","_callee7","_context7","_callee8","_context8","_callee9","_context9","_this4","category_list_component_NewCategory","category_list_component_Category","App","react_router","path","component","AllUsers","AllTechnologies","AllCategories","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70cf68c8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class CreateUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeAge = this.onChangeAge.bind(this);\n    this.onChangeLocation = this.onChangeLocation.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      name: \"\",\n      age: \"\",\n      location: \"\"\n    };\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n  onChangeAge(e) {\n    this.setState({\n      age: e.target.value\n    });\n  }\n  onChangeLocation(e) {\n    this.setState({\n      location: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    //console log when submitted\n    console.log(`User Form Submitted`);\n    console.log(`Name: ${this.state.name}`);\n    console.log(`Age: ${this.state.age}`);\n    console.log(`Location: ${this.state.location}`);\n\n    const newUser = {\n      name: this.state.name,\n      age: this.state.age,\n      location: this.state.location\n    };\n\n    // let result;\n\n    axios\n      .post(\"http://http://localhost:8000/api/v1/users/\", newUser)\n      .then(res => {\n        this.setState(\n          {\n            complete: true,\n            name: \"\",\n            age: \"\",\n            location: \"\"\n          },\n          () => console.log(res.data)\n        );\n      })\n      .catch(err => {\n        this.setState({\n          complete: false,\n          name: \"\",\n          age: \"\",\n          location: \"\"\n        });\n      });\n  }\n\n  renderSuccess = () => {\n    switch (this.state.complete) {\n      case true:\n        return <span>USER CREATED SUCCESSFULLY</span>;\n      case false:\n        return <span>SOMETHING WENT WRONG</span>;\n      case undefined:\n        return null;\n      default:\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ marginTop: 15 }}>\n        {this.renderSuccess()}\n        <h3>Create New User</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Name: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.name}\n              onChange={this.onChangeName}\n            />\n\n            <label>Age: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.age}\n              onChange={this.onChangeAge}\n            />\n\n            <label>Location: </label>\n            <input\n              type=\"numbertext\"\n              className=\"form-control\"\n              value={this.state.location}\n              onChange={this.onChangeLocation}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create New User\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass UserList extends Component {\n    state = {\n        error: '',\n        users: []\n    }\n\n    componentDidMount(){\n        this.fetchUsers();\n    }\n\n    fetchUsers = async () => {\n        try {\n            const res = await axios.get('http://localhost:4000/users');\n            console.log(res)\n            this.setState({users: res.data});\n        }\n        catch (err) {\n            console.log(err)\n            this.setState({error: err.message})\n        }\n    }\n\n    render() {\n        if (this.state.error){\n            return <div>{this.state.error}</div>\n        }\n        return (\n            <div>\n                <h3>Users</h3>\n                {this.state.users.map(user => (\n                    <div key={user._id}>\n                        <span>{user.name || user._id}</span>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default UserList;","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class CreateTechnology extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeLanguage = this.onChangeLanguage.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      labguage: \"\"\n    };\n  }\n\n  onChangeLanguage(e) {\n    this.setState({\n      language: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    //console log when submitted\n    console.log(`Technology Form Submitted`);\n    console.log(`Language: ${this.state.language}`);\n\n    const newTechnology = {\n      language: this.state.language\n    };\n\n    // let result;\n\n    axios\n      .post(\"http://localhost:8000/api/v1/technologies/\", newTechnology)\n      .then(res => {\n        this.setState(\n          {\n            complete: true,\n            language: \"\"\n          },\n          () => console.log(res.data)\n        );\n      })\n      .catch(err => {\n        this.setState({\n          complete: false,\n          language: \"\"\n        });\n      });\n  }\n\n  renderSuccess = () => {\n    switch (this.state.complete) {\n      case true:\n        return <span>TECHNOLOGY ADDED SUCCESSFULLY</span>;\n      case false:\n        return <span>SOMETHING WENT WRONG</span>;\n      case undefined:\n        return null;\n      default:\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ marginTop: 15 }}>\n        {this.renderSuccess()}\n        <h3>Technology</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Language: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.language}\n              onChange={this.onChangeLanguage}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input \n                type=\"submit\" \n                value=\"Save\" \n                className=\"btn btn-primary\" \n                />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass TechnologyList extends Component {\n    state = {\n        error: '',\n        technologies:  [\n            {\n                \"id\": 7,\n                \"language\": \"Java\",\n                \"category\": 2\n            },\n            {\n                \"id\": 6,\n                \"language\": \"python\",\n                \"category\": 3\n            },\n            {\n                \"id\": 1,\n                \"language\": \"javascript\",\n                \"category\": 3\n            }\n        ]\n    }\n\n    componentDidMount(){\n        this.fetchTechnologies();\n    }\n\n    fetchTechnologies = async () => {\n        try {\n            const res = await axios.get('/api/v1//technologies');\n            this.setState({technologies: res.data});\n        }\n        catch (err) {\n            console.log(err)\n            // this.setState({error: err.message})\n        }\n    }\n\n    render() {\n        if (this.state.error){\n            return <div>{this.state.error}</div>\n        }\n        return (\n            <div>\n                <h3>Technologies</h3>\n                {this.state.technologies.map(technology => (\n                    <div key={technology.id}>\n                        <Link to={`/api/v1/technologies/${technology.id}`} >{technology.language}</Link>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default TechnologyList;","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class CreateCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      title: \"\"\n    };\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    //console log when submitted\n    console.log(`Category Form Submitted`);\n    console.log(`Title: ${this.state.title}`);\n\n    const newCategory = {\n      title: this.state.title\n    };\n\n    // let result;\n\n    axios\n      .post(\"http://localhost:8000/api/v1/categories/\", newCategory)\n      .then(res => {\n        this.setState(\n          {\n            complete: true,\n            title: \"\"\n          },\n          () => console.log(res.data)\n        );\n      })\n      .catch(err => {\n        this.setState({\n          complete: false,\n          title: \"\"\n        });\n      });\n  }\n\n  renderSuccess = () => {\n    switch (this.state.complete) {\n      case true:\n        return <span>CATEGORY ADDED SUCCESSFULLY</span>;\n      case false:\n        return <span>SOMETHING WENT WRONG</span>;\n      case undefined:\n        return null;\n      default:\n    }\n  };\n\n  render() {\n    return (\n      <div style={{ marginTop: 15 }}>\n        {this.renderSuccess()}\n        <h3>Add New Category</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Title: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.title}\n              onChange={this.onChangeTitle}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass NewCategory extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n\n        this.state = {\n            id: null,\n          title: \"\"\n        };\n      }\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    componentDidMount() {\n        if (this.props.category) {\n            const { id, title } = this.props.category\n            this.setState({\n                id,\n                title\n            })\n        }\n        console.log(this.props.category)\n    }\n\n    render() {\n        return <div style={{ marginTop: 15 }}>\n            <h3>Add New Category</h3>\n            <form onSubmit={e => this.props.onSubmit(e, this.state)}>\n                <div className=\"form-group\">\n                <label>Title: </label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.title}\n                    onChange={this.onChangeTitle}\n                />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n                </div>\n            </form>\n            <button onClick={this.props.onClose}>close</button>\n            </div>\n    }\n}\n\nconst Category = ({category, onClose, onEdit}) => {\n    return <div>\n        <span>{category.title}</span>\n        <button onClick={() => onEdit(category)}>edit</button>\n    </div>\n}\n\nclass CategoryList extends Component {\n    state = {\n        error: '',\n        edit: false,\n        categories: [\n            {\n                \"id\": 7,\n                \"title\": \"Functions\",\n            },\n            {\n                \"id\": 6,\n                \"title\": \"RegEx\",\n            },\n            {\n                \"id\": 1,\n                \"title\": \"Methods\",\n            },\n            {\n                \"id\": 3,\n                \"title\": \"Burgers\",\n            },\n            {\n                \"id\": 2,\n                \"title\": \"Fries\",\n            }\n        ]\n    }\n\n    onSubmit = (e, category) => {\n        e.preventDefault();\n        //console log when submitted\n        console.log(`Category Form Submitted`);\n        console.log(`Title: ${category}`);\n        const { id, title } = category;\n\n        if (id) {\n            console.log('UPDATE TITLE')\n            const updatedCategory = {title};\n            console.log('Updated Category:', id, updatedCategory);\n        } else {\n            console.log(\"CREATE TITLE\")\n            const newCategory = {title};\n        \n            // let result;\n            console.log(`Category:`, newCategory)\n            axios\n                .post(\"http://localhost:8000/api/v1/categories/\", newCategory)\n                .then(res => {\n                    this.setState({\n                            edit: null,\n                            categories: res.data\n                        },\n                        () => console.log(res)\n                    );\n                })\n                .catch(err => {\n                    this.setState({\n                        edit: null,\n                        // error: err.message, \n                        categories: [ ...this.state.categories, { id: 42, title } ]\n                    },() => {debugger});\n                });\n        }\n\n    }\n\n    componentDidMount(){\n        this.fetchCategories();\n    }\n\n    openEdit = async (category) => {\n        try {\n            this.setState({editCategories: true})\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n    closeEdit = async () => {\n        try {\n            this.setState({editCategories: false})\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n    deleteCategory = async (category) => {\n        try {\n            // axios.delete\n            this.fetchCategories();\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n    editCategory = async (category) => {\n        try {\n            this.setState({edit: category})\n        }\n        catch (err) {\n            console.log(err)\n            // this.setState({error: err.message})\n        }\n    }\n\n    closeCategory = async () => {\n        this.setState({\n            edit: false,\n            newCategory: false,\n            selectedCategory: ''\n        },\n        () => {\n            console.log(\"Category Closed\")\n        })\n    }\n\n    saveCategory = async (category) => {\n        const data = {\n            title: category.title\n        }\n        console.log(\"save this new category\", data)\n        try {\n            const res = await axios.post('/api/vi//categories', {\n                data\n            });\n            this.setState({});\n            this.setState({\n                edit: '',\n                categories: res.data\n            },\n            () => {\n                console.log(\"Category Saved\")\n            })\n        }\n        catch (err) {\n            console.log(err)\n            // this.setState({error: err.message})\n        }\n    }\n\n    showCategory = async (category) => {\n        try {\n            this.setState({selectedCategory: category});\n        }\n        catch (err) {\n            console.log(err)\n            // this.setState({error: err.message})\n        }\n    }\n\n    newCategory = async () => {\n        try {\n            this.setState({newCategory: true});\n        }\n        catch (err) {\n            console.log(err)\n            // this.setState({error: err.message})\n        }\n    }\n\n    fetchCategories = async () => {\n        try {\n            const res = await axios.get('/api/v1//categories');\n            this.setState({categories: res.data});\n        }\n        catch (err) {\n            console.log(err)\n            // this.setState({error: err.message})\n        }\n    }\n\n    render() {\n        if (this.state.error){\n            return <div>{this.state.error}</div>\n        }\n        // if (this.state.selectedCategory) {\n        //     return this.state.edit ? <NewCategory category={this.state.selectedCategory} onClose={this.closeCategory} onSubmit={this.saveCategory} /> : <Category category={this.state.selectedCategory} onClose={this.closeCategory} onEdit={this.editCategory} />\n        // }\n        return (\n            <div>\n                <h3>Categories {this.state.editCategories ? <button onClick={this.closeEdit}><span>done</span></button> : <button onClick={this.openEdit}><span>edit</span></button>}<button onClick={this.newCategory}>+</button></h3>\n                {this.state.categories.map(category => {\n                    const { id, title } = category;\n                    if (id) {\n                            return (\n                                <div key={id}>\n                                    {this.state.edit.id === id\n                                        ? <NewCategory category={category}onClose={this.closeCategory} onSubmit={this.saveCategory} /> \n                                        : <Category category={category} onClose={this.closeCategory} onEdit={this.editCategory} />}\n                                        {/* <Link onClick={() => this.showCategory(category)}>{category.title}</Link> */}\n                                    {this.state.editCategories ? <button onClick={() => this.deleteCategory(id)}><span>delete</span></button> : null}\n                                </div>\n                            )\n                        } else {\n                            return (\n                                <div>{title}</div>\n                            )\n                        }\n                })}\n                {this.state.newCategory ? <NewCategory onSubmit={this.onSubmit} onClose={this.closeCategory} /> : null}\n            </div>\n        );\n    }\n}\n\nexport default CategoryList;","// App.js\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n// import Home from \"./components/a-home-page.component\";\nimport CreateUser from \"./components/user-create.component\";\nimport AllUsers from \"./components/user-list.component\";\nimport CreateTechnology from \"./components/technology-create.component\";\nimport AllTechnologies from \"./components/technology-list.component\";\nimport CreateCategory from \"./components/category-create.component\";\nimport AllCategories from \"./components/category-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container jumbotron\">\n          <nav className=\"navbar navbar-expand-lg navbar bg-dark\">\n            <Link to=\"/\" className=\"navbar-brand\">\n              <h2>Study Buddy</h2>\n            </Link>\n            <div className=\"navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/users\" className=\"nav-link\">\n                    Users\n                  </Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/createUser\" className=\"nav-link\">\n                    +\n                  </Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/technologies\" className=\"nav-link\">\n                    Technologies\n                  </Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/addTechnology\" className=\"nav-link\">\n                    +\n                  </Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/categories\" className=\"nav-link\">\n                    Categories\n                  </Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/addCategory\" className=\"nav-link\">\n                    +\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n\n          {/* <Route path=\"/home\" component={Home} /> */}\n          <Route path=\"/users\" component={AllUsers} />\n          <Route path=\"/createUser\" component={CreateUser} />\n          <Route path=\"/technologies\" component={AllTechnologies} />\n          <Route path=\"/addTechnology\" component={CreateTechnology} />\n          <Route path=\"/categories\" component={AllCategories} />\n          <Route path=\"/addCategory\" component={CreateCategory} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}